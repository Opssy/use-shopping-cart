{"expireTime":9007200841408099000,"key":"gatsby-plugin-mdx-entire-payload-58e1ef1e6e608ac69bde6ea71ebf3b1e-","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"At the root level of your app, wrap your Root app in the ","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":58,"offset":58},"indent":[]}},{"type":"inlineCode","value":"<CartProvider />","position":{"start":{"line":2,"column":58,"offset":58},"end":{"line":2,"column":76,"offset":76},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":76,"offset":76},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"/** @jsx jsx */\nimport { CartProvider } from 'use-stripe-cart';\nimport './index.css';\nimport App from './App';\n\nconst stripe = window.Stripe(process.env.REACT_APP_STRIPE_API_PUBLIC);\n\nReactDOM.render(\n  <CartProvider\n    stripe={stripe}\n    billingAddressCollection={false}\n    successUrl={'stripe.com'}\n    cancelUrl={'twitter.com/dayhaysoos'}\n    currency={'USD'}\n  >\n    <App />\n  </CartProvider>,\n  document.getElementById('root')\n);","position":{"start":{"line":5,"column":1,"offset":79},"end":{"line":25,"column":4,"offset":527},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"CartProvider\"}","position":{"start":{"line":28,"column":1,"offset":530},"end":{"line":28,"column":53,"offset":582},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":28,"column":53,"offset":582}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"CartProvider\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"At the root level of your app, wrap your Root app in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CartProvider />\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"/** @jsx jsx */\\nimport { CartProvider } from 'use-stripe-cart';\\nimport './index.css';\\nimport App from './App';\\n\\nconst stripe = window.Stripe(process.env.REACT_APP_STRIPE_API_PUBLIC);\\n\\nReactDOM.render(\\n  <CartProvider\\n    stripe={stripe}\\n    billingAddressCollection={false}\\n    successUrl={'stripe.com'}\\n    cancelUrl={'twitter.com/dayhaysoos'}\\n    currency={'USD'}\\n  >\\n    <App />\\n  </CartProvider>,\\n  document.getElementById('root')\\n);\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"CartProvider\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`At the root level of your app, wrap your Root app in the `}<inlineCode parentName=\"p\">{`<CartProvider />`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`/** @jsx jsx */\nimport { CartProvider } from 'use-stripe-cart';\nimport './index.css';\nimport App from './App';\n\nconst stripe = window.Stripe(process.env.REACT_APP_STRIPE_API_PUBLIC);\n\nReactDOM.render(\n  <CartProvider\n    stripe={stripe}\n    billingAddressCollection={false}\n    successUrl={'stripe.com'}\n    cancelUrl={'twitter.com/dayhaysoos'}\n    currency={'USD'}\n  >\n    <App />\n  </CartProvider>,\n  document.getElementById('root')\n);\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}