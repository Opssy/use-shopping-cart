{"componentChunkName":"component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js","path":"/getting-started/","result":{"data":{"mdx":{"id":"9d044d30-d64f-52b1-8563-5388783c112c","excerpt":"Installation The package needs to be configured with your account's secret key, which is available in the  Stripe Dashboard . Require it with the key's valueâ€¦","fields":{"slug":"/getting-started/"},"frontmatter":{"title":"Getting started","description":null,"image":null,"disableTableOfContents":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Getting started\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"installation\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#installation\",\n    \"aria-label\": \"installation permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Installation\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"npm install --save @stripe/stripe-js use-shopping-cart\\n\\nor\\n\\nyarn add @stripe/stripe-js use-shopping-cart\\n\")), mdx(\"p\", null, \"The package needs to be configured with your account's secret key, which is available in the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://dashboard.stripe.com/apikeys\"\n  }), \"Stripe Dashboard\"), \". Require it with the key's value.\"), mdx(\"p\", null, \"At the root level of your app, wrap your root component in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CartProvider />\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import ReactDOM from 'react-dom'\\n\\nimport { loadStripe } from '@stripe/stripe-js'\\nimport { CartProvider } from 'use-shopping-cart'\\n\\nimport App from './App'\\n\\n// Remember to add your public Stripe key\\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_API_PUBLIC)\\n\\nReactDOM.render(\\n  <CartProvider\\n    stripe={stripePromise}\\n    successUrl=\\\"stripe.com\\\"\\n    cancelUrl=\\\"twitter.com/dayhaysoos\\\"\\n    currency=\\\"USD\\\"\\n    allowedCountries={['US', 'GB', 'CA']}\\n    billingAddressCollection={true}\\n  >\\n    <App />\\n  </CartProvider>,\\n  document.getElementById('root')\\n)\\n\")), mdx(\"h3\", {\n    \"id\": \"using-the-hook\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#using-the-hook\",\n    \"aria-label\": \"using the hook permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Using the hook\"), mdx(\"p\", null, \"The hook \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useShoppingCart()\"), \" provides several utilities and pieces of data for you to use in your application. The examples below won't cover every part of the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useShoppingCart()\"), \" API but you can \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#API\"\n  }), \"look at the API\"), \" below.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import { useShoppingCart } from 'use-shopping-cart'\\nimport { Product } from './Product'\\nimport { CartItems } from './CartItems'\\n\\nconst productData = [\\n  {\\n    name: 'Bananas',\\n    sku: 'sku_GBJ2Ep8246qeeT',\\n    price: 400,\\n    image: 'https://www.fillmurray.com/300/300',\\n    currency: 'USD',\\n  },\\n  {\\n    name: 'Tangerines',\\n    sku: 'sku_GBJ2WWfMaGNC2Z',\\n    price: 100,\\n    image: 'https://www.fillmurray.com/300/300',\\n    currency: 'USD',\\n  },\\n]\\n\\nexport function App() {\\n  /* Gets the totalPrice and a method for redirecting to stripe */\\n  const { totalPrice, redirectToCheckout, cartCount } = useShoppingCart()\\n\\n  return (\\n    <div>\\n      {/* Renders the products */}\\n      {productData.map((product) => (\\n        <Product product={product} />\\n      ))}\\n\\n      {/* This is where we'll render our cart */}\\n      <p>Number of Items: {cartCount}</p>\\n      <p>Total: {totalPrice()}</p>\\n      <CartItems />\\n\\n      {/* Redirects the user to Stripe */}\\n      <button onClick={() => redirectToCheckout()}>Checkout</button>\\n    </div>\\n  )\\n}\\n\")), mdx(\"p\", null, \"Once you have successfully installed \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"stripe\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"use-shopping-cart\"), \" and wrap your root component with CartProvider, you are ready to go! \\uD83D\\uDE80\"));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":2,"value":"Installation"},{"depth":3,"value":"Using the hook"}]}},"pageContext":{"slug":"/getting-started/","prev":{"label":"Discord","link":"/discord"},"next":{"label":"CartProvider","link":"/usage/cartprovider"},"githubEditUrl":"https:/github.com/rocketseat/gatsby-themes/tree/master/examples/gatsby-theme-docs/src/docs/getting-started.mdx"}}}