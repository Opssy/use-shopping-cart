{"componentChunkName":"component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js","path":"/usage/addItem()/","result":{"data":{"mdx":{"id":"e9998f36-d3fe-54b0-8c42-4bbd923c8527","excerpt":"To add a product to the cart, use  useShoppingCart() 's  addItem(product)  method. It takes in your product object, which must have a  sku  and a  price , andâ€¦","fields":{"slug":"/usage/addItem()/"},"frontmatter":{"title":"addItem()","description":null,"image":null,"disableTableOfContents":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"addItem()\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"To add a product to the cart, use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useShoppingCart()\"), \"'s \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"addItem(product)\"), \" method. It takes in your product object, which must have a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sku\"), \" and a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"price\"), \", and adds it to the cart.\"), mdx(CartDisplayWrapper, {\n    mdxType: \"CartDisplayWrapper\"\n  }, mdx(AddItem, {\n    product: {\n      name: 'Bananas',\n      sku: 'sku_GBJ2Ep8246qeeT',\n      price: 400,\n      image: 'https://images.unsplash.com/photo-1574226516831-e1dff420e562?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80',\n      currency: 'USD'\n    },\n    mdxType: \"AddItem\"\n  })), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"export function Product({ product }) {\\n  const { addItem } = useShoppingCart()\\n\\n  /* A helper function that turns the price into a readable format */\\n  const price = formatCurrencyString({\\n    value: product.price,\\n    currency: product.currency,\\n    language: navigator.language,\\n  })\\n  return (\\n    <article\\n      style={{\\n        display: 'flex',\\n        flexDirection: 'column',\\n        justifyContent: 'center',\\n        alignItems: 'center',\\n        width: '50%',\\n      }}\\n    >\\n      <figure style={{ textAlign: 'center' }}>\\n        <img\\n          style={{ height: 200, width: 250 }}\\n          src={product.image}\\n          alt={` ${product.name}`}\\n        />\\n        <figcaption>{product.name}</figcaption>\\n      </figure>\\n      <p>{price}</p>\\n      {/* Adds the item to the cart */}\\n      <button\\n        onClick={() => addItem(product)}\\n        aria-label={`Add ${product.name} to your cart`}\\n        style={{ height: 50, width: 100, marginBottom: 30 }}\\n      >\\n        Add to cart\\n      </button>\\n    </article>\\n  )\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[]}},"pageContext":{"slug":"/usage/addItem()/","prev":{"label":"CartProvider","link":"/usage/cartprovider"},"next":{"label":"cartDetails","link":"/usage/cartDetails"},"githubEditUrl":"https:/github.com/rocketseat/gatsby-themes/tree/master/examples/gatsby-theme-docs/src/docs/usage/addItem().mdx"}}}