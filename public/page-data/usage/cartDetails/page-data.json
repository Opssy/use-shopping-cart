{"componentChunkName":"component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js","path":"/usage/cartDetails/","result":{"data":{"mdx":{"id":"c6964481-333d-5bf4-820c-80e00694f515","excerpt":"Once the user has added their items to the cart, you can use the  cartDetails  object to display the different data about each product in their cart. Eachâ€¦","fields":{"slug":"/usage/cartDetails/"},"frontmatter":{"title":"cartDetails","description":null,"image":null,"disableTableOfContents":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"cartDetails\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Once the user has added their items to the cart, you can use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cartDetails\"), \" object to display the different data about each product in their cart.\"), mdx(\"p\", null, \"Each product in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cartDetails\"), \" contains the same data you provided when you called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"addItem(product)\"), \". In addition, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cartDetails\"), \" also provides the following properties:\"), mdx(\"table\", null, mdx(\"tr\", null, mdx(\"th\", null, \"Name\"), mdx(\"th\", null, \"Value\")), mdx(\"tr\", null, mdx(\"td\", null, mdx(\"p\", null, \"quantity\")), mdx(\"td\", null, \"Number of that product added to the cart\")), mdx(\"tr\", null, mdx(\"td\", null, mdx(\"p\", null, \"value\")), mdx(\"td\", null, \"The \", mdx(\"p\", null, \"price * quantity\"))), mdx(\"tr\", null, mdx(\"td\", null, mdx(\"p\", null, \"formattedValue\")), mdx(\"td\", null, \"A currency formatted version of \", mdx(\"p\", null, \"value\")))), mdx(CartDisplayWrapper, {\n    mdxType: \"CartDisplayWrapper\"\n  }, mdx(AddItem, {\n    product: {\n      name: 'Bananas',\n      sku: 'sku_GBJ2Ep8246qeeT',\n      price: 400,\n      image: 'https://images.unsplash.com/photo-1574226516831-e1dff420e562?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80',\n      currency: 'USD'\n    },\n    mdxType: \"AddItem\"\n  })), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import { useShoppingCart } from 'use-shopping-cart'\\n\\nexport function CartItems() {\\n  const {\\n    cartDetails,\\n    reduceItemByOne,\\n    addItem,\\n    removeCartItem,\\n  } = useShoppingCart()\\n\\n  const cart = []\\n  // Note: Object.keys().map() takes 2x as long as a for-in loop\\n  for (const sku in cartDetails) {\\n    const cartEntry = cartDetails[sku]\\n\\n    // all of your basic product data still exists (i.e. name, image, price)\\n    cart.push(\\n      <article>\\n        {/* image here */}\\n        {/* name here */}\\n        <p>Line total: {cartEntry.formattedValue}</p>\\n\\n        {/* What if we want to remove one of the item... or add one */}\\n        <button\\n          onClick={() => reduceItemByOne(cartEntry.sku)}\\n          aria-label={`Remove one ${cartEntry.name} from your cart`}\\n        >\\n          -\\n        </button>\\n        <p>Quantity: {cartEntry.quantity}</p>\\n        <button\\n          onClick={() => addItem(cartEntry)}\\n          aria-label={`Add one ${cartEntry.name} to your cart`}\\n        >\\n          +\\n        </button>\\n\\n        {/* What if we don't want this product at all */}\\n        <button\\n          onClick={() => removeCartItem(cartEntry.sku)}\\n          aria-label={`Remove all ${cartEntry.name} from your cart`}\\n        >\\n          Remove\\n        </button>\\n      </article>\\n    )\\n  }\\n\\n  return cart\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[]}},"pageContext":{"slug":"/usage/cartDetails/","prev":{"label":"addItem()","link":"/usage/addItem()"},"next":{"label":"reduceItemByOne()","link":"/usage/reduceItemByOne()"},"githubEditUrl":"https:/github.com/rocketseat/gatsby-themes/tree/master/examples/gatsby-theme-docs/src/docs/usage/cartDetails.mdx"}}}